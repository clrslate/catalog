apiVersion: core.clrslate.io
kind: Activity
metadata:
  name: clrslatePlatform.activity.clrcoreServiceAccount
  title: ClrCore Service Account
  description: Setup ClrCore Service Account for the tenant
  labels:
    category: ClrSlate Platform
spec:
  inputs:
    properties:
      cluster:
        type: object
        format: resource
        title: Target Cluster
        description: Target Kubernetes Cluster
        specifications:
          type: azure.model.aks
      tenantName:
        type: string
        title: Tenant Name
        description: The name of the tenant
      serviceAccountName:
        type: string
        title: Service Account Name
        description: The name of the service account
        default: clrcore
    required:
      - cluster
      - tenantName
  mirrored:
    serviceAccount:
      type: string
      format: yaml
      title: Virtual Service
      description: Virtual Service manifest
      value: |
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: {{ inputs.serviceAccountName | kebabize }}
          namespace: {{ inputs.tenantName | kebabize }}
        ---
        kind: Role
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: {{ inputs.serviceAccountName | kebabize }}-role
          namespace: {{ inputs.tenantName | kebabize }}
        rules:
          # Core API
          - apiGroups: [""]
            resources: ["services", "pods", "deployments", "configmaps", "secrets", "statefulsets"]
            verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
          # Apps API
          - apiGroups: ["apps"]
            resources: ["deployments", "daemonsets", "jobs", "statefulsets", "replicasets"]
            verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
          # Tekton API
          - apiGroups: ["tekton.dev"]
            resources: ["*"]
            verbs: ["*"]
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: {{ inputs.serviceAccountName | kebabize }}-binding
          namespace: {{ inputs.tenantName | kebabize }}
        subjects:
          - kind: ServiceAccount
            name: {{ inputs.serviceAccountName | kebabize }}
            namespace: {{ inputs.tenantName | kebabize }}
        roleRef:
          kind: Role
          name: {{ inputs.serviceAccountName | kebabize }}-role
          apiGroup: rbac.authorization.k8s.io
  handler:
    type: tekton.pipelineRef
    properties:
      pipeline: k8s.pipelineRef.kubectl-apply
      inputs:
        cluster: '{{inputs.cluster._name}}'
        namespace: '{{inputs.tenantName | kebabize}}'
        values: '{{ inputs.serviceAccount }}'


  
