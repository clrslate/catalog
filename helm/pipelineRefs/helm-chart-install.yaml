apiVersion: tekton.clrslate.io
kind: PipelineRef
metadata:
  name: helm.pipelineRef.helm-install
  title: Helm Install
  description: An activity that installs Helm releases in the given clusters
  labels:
    category: Helm
    owner: clrslate
    package: k8s
  tags:
    - tekton
    - kubernetes
    - create
spec:
  schema:
    properties:
      cluster:
        type: object
        format: resource
        title: Target Cluster
        description: Target Kubernetes Cluster
        specifications:
          type: azure.model.aks
      helmChart:
        type: object
        format: resource
        title: Target Helm Chart
        description: Target Helm Chart
        specifications:
          type: helm.model.helmChart
      releaseName:
        type: string
        description: The name of the Helm release
      namespace:
        type: string
        description: The namespace of the Helm release
      createNamespace:
        type: boolean
        description: Whether to create the namespace for the Helm release
        default: false
      values:
        type: object
        description: Collection of key-value pairs to be used for the Helm chart installation (simple per-activity overrides, passed via --set)
      valuesFile:
        type: string
        description: Values file template to be used for the Helm chart installation (per-activity override, rendered as values.yaml)
    required:
      - cluster
      - helmChart
      - releaseName
  mirrored:
    command:
      type: string
      value: |
        {%- assign versionFlag = inputs.helmChart.version | default: "" -%}
        {%- if versionFlag != "" -%}
          {%- assign versionFlag = " --version " | append: versionFlag -%}
        {%- endif -%}
        {%- assign repoFlag = "" -%}
        {%- if inputs.helmChart.repository and inputs.helmChart.repository != "" -%}
          {%- assign repoFlag = " --repo " | append: inputs.helmChart.repository -%}
        {%- endif -%}
        {%- assign createNsFlag = "" -%}
        {%- if inputs.createNamespace -%}
          {%- assign createNsFlag = " --create-namespace" -%}
        {%- endif -%}
        {%- assign setValues = "" -%}
        {%- if inputs.values and inputs.values != empty -%}
          {%- assign setPairs = "" -%}
          {%- for key in inputs.values.keys -%}
            {%- if forloop.last -%}
              {%- assign setPairs = setPairs | append: key | append: "=" | append: '"' | append: inputs.values[key] | append: '"' -%}
            {%- else -%}
              {%- assign setPairs = setPairs | append: key | append: "=" | append: '"' | append: inputs.values[key] | append: '"' | append: "," -%}
            {%- endif -%}
          {%- endfor -%}
          {%- assign setValues = " --set " | append: setPairs -%}
        {%- endif -%}
        {%- assign valuesFileFlag = "" -%}
        {%- if inputs.valuesFile and inputs.valuesFile != "" -%}
          {%- assign valuesFileFlag = valuesFileFlag | append: " --values manifests/values.yaml" -%}
        {%- endif -%}
        {%- assign chartValuesFileFlag = "" -%}
        {%- if inputs.helmChart.values and inputs.helmChart.values != "" -%}
          {%- assign chartValuesFileFlag = chartValuesFileFlag | append: " --values manifests/chart-values.yaml" -%}
        {%- endif -%}
        {%- assign nsFlag = "" -%}
        {%- if inputs.namespace and inputs.namespace != "" -%}
          {%- assign nsFlag = " --namespace " | append: inputs.namespace -%}
        {%- elsif inputs.helmChart.namespace and inputs.helmChart.namespace != "" -%}
          {%- assign nsFlag = " --namespace " | append: inputs.helmChart.namespace -%}
        {%- endif -%}
        {%- capture command -%}helm upgrade --install {{inputs.releaseName}} {{inputs.helmChart.name}} {{versionFlag}}{{repoFlag}}{{nsFlag}}{{createNsFlag}}{{setValues}}{{chartValuesFileFlag}}{{valuesFileFlag}} --wait{%- endcapture -%}
        {{- command | strip -}}
  pipeline:
    pipelineRef: azure.pipelines.aks-script
    params:
      image: '{{inputs.cluster.image}}'
      script: '{{inputs.command}}'
      clusterName: '{{inputs.cluster.name}}'
      resourceGroupName: '{{inputs.cluster.resourceGroup.name}}'
    secretMounts:
      azureCredentialsRef: "{{inputs.cluster.resourceGroup.subscription.credentials._name}}"
    files:
      values.yaml: |
        {% if inputs.valuesFile %}{{inputs.valuesFile}}{% else %}# Default empty values file{% endif %}
      chart-values.yaml: |
        {% if inputs.helmChart.values %}{{inputs.helmChart.values}}{% else %}# Default empty chart values file{% endif %}
